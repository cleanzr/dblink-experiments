dblink : { 
    // Define some distortion hyperparameters (referenced below)
    // numRecords = 600,000
    lowDistortion : {alpha : 600.0, beta : 60000.0}

    // Define similarity functions (referenced below)
    constSimFn : {
        name : "ConstantSimilarityFn",
    }
    
    data : {
        // Path to data files. Must have header row (column names).
        path : "/data/neil/datasets/EDM Simulation v2.mac.csv"
        
        // Specify columns that contain identifiers
        recordIdentifier : "RECID",
        fileIdentifier : "FILEID",
        entityIdentifier : "ENTID" // optional
        
        // String representation of a missing value
        nullValue : "."
        
        // Specify properties of the attributes (columns) used for matching
        matchingAttributes : [
            {name : "MB", similarityFunction : ${dblink.constSimFn}, distortionPrior : ${dblink.lowDistortion}},
            {name : "BDAY", similarityFunction : ${dblink.constSimFn}, distortionPrior : ${dblink.lowDistortion}},
            {name : "BYEAR", similarityFunction : ${dblink.constSimFn}, distortionPrior : ${dblink.lowDistortion}},
            {name : "SEX", similarityFunction : ${dblink.constSimFn}, distortionPrior : ${dblink.lowDistortion}}
        ]
    }

    randomSeed : 319158
    expectedMaxClusterSize : 10
    
    // Specify partitioner
    partitioner : {
        name : "KDTreePartitioner",
        properties : {
            numLevels : 6, // a value of zero means no partitioning
            matchingAttributes : ["MB", "BDAY", "BYEAR"] // cycle through matching attributes in this order when constructing the tree
        }
    }

    // Path to save Markov chain and full state (for resuming MCMC) + summaries
    outputPath : "/data/neil/jcgs/ABSEmployee_64partitions_PCG-I/"

    // Path to save Spark checkpoints
    checkpointPath : "/scratch/neil/dblink-checkpoints/"
    
    // Steps to be performed (in order)
    steps : [
        {name : "sample", parameters : {
            sampleSize : 10000,
            burninInterval : 0,
            thinningInterval : 10,
            resume : false,
            sampler : "PCG-I"
        }},
        {name : "summarize", parameters : {
            lowerIterationCutoff : 0,
            quantities : ["cluster-size-distribution", "partition-sizes"]
        }},
        {name : "evaluate", parameters : {
            lowerIterationCutoff : 10000,
            metrics : ["pairwise", "cluster"], 
            useExistingSMPC : false
        }}
    ]
}
